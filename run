#!/bin/bash

if [ "$1" == "install" ]; then
	python3 -m venv ./venv
	if pip show GitPython > /dev/null 2>&1; then
		bash -c 'source venv/bin/activate && pip install GitPython && deactivate'
	fi
	if pip show coverage > /dev/null 2>&1; then
		bash -c 'source venv/bin/activate && pip install coverage && deactivate'
	fi
	if ! [ -e ./cloc ]; then
		git clone https://github.com/AlDanial/cloc.git
	fi
	if [[ $(node -v) != v18.14.0 ]]; then
		curl -o- https://raw.githubusercontent.com/nvm-sh/nvm/v0.35.3/install.sh | bash
		export NVM_DIR="$HOME/.nvm"
		[ -s "$NVM_DIR/nvm.sh" ] && \. "$NVM_DIR/nvm.sh"
		[ -s "$NVM_DIR/bash_completion" ] && \. "$NVM_DIR/bash_completion"
		nvm install v18.14.0
		nvm use v18.14.0
	fi
	if ! [ -e ./tsconfig.json ]; then
		npx tsc --init
	fi
	npm i typescript fs readline dotenv @octokit/rest @octokit/core @octokit/request types --save --no-fund --silent
	npm i @types/node mocha chai @types/chai sinon @types/sinon @types/mocha nyc mochawesome  --save-dev --no-fund --silent
elif [ "$1" == "build" ]; then
	npx tsc src/npmToGithub.ts
	npx tsc src/licAndResp.ts
	npx tsc src/busfactor.ts
	npx tsc test/npmToGithub.spec.ts
elif [ "$1" == "test" ]; then
	cd test
	python3 -m coverage run -m fileCounterTest > /dev/null 2>&1
	python3 -m coverage json > /dev/null 2>&1
	cd ..
	npx nyc --reporter=text-summary mocha test/npmToGithub.spec.js --reporter mochawesome | tail -n 2 > test/nycCoverage
	cd test
	python3 parseJSON.py
else
	node src/npmToGithub.js $1
	python3 fileCounter.py
fi

